{
    "openapi": "3.0.0",
    "info": {
      "title": "Project API Documentation",
      "version": "1.0.0",
      "description": "API documentation"
    },
    "servers": 
      [{
        "url": "http://localhost:1001",
        "description": "Local server"
      }]
    ,
    "components": {
      "securitySchemes": {
          "JWT": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization",
            "description": "Include `Bearer` before the token",
            "example":"Bearer "
          }
      },
      "schemas": {
        "LoginRequest": {
          "type": "object",
          "properties": {
            "userName": {
              "type": "string",
              "example": "johndoe@example.com",
              "description": "Username to login"
            },
            "password": {
              "type": "string",
              "example": "password123",
              "description": "The user's password"
            }
          },
          "required": ["userName", "password"]
        },
        "InvalidArgumentsErrorResponse": {
          "type": "object",
          "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid arguments"
                }        
          }
        },
        "InternalServerErrorResponse": {
          "type": "object",
          "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }        
          }
        },
        "UnauthorizedErrorResponse": {
          "type": "object",
          "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized user"
                }        
          }
        },
        "ForbiddenErrorResponse": {
          "type": "object",
          "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid refresh token"
                }        
          }
        }
      }
    },
    "paths": {
      "/admin/login": {
        "put": {
          "summary": "Admin Login",
          "tags": ["Admin"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User logged in successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message":{
                        "type": "string",
                        "example":"User logger in successfully"
                    },
                    "userData":{
                        "type": "object",
                        "properties":{
                            "name":{
                                "type":"string",
                                "example":"John Doe"
                            },
                            "userType":{
                                "type":"string",
                                "example":"Ram"
                            },
                            "id":{
                                "type":"string",
                                "example":"a281682f8j"
                            }
                        }
                    },
                    "token":{
                        "type":"string",
                        "description":"User access token"
                    }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Missing User name or Password",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InvalidArgumentsErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid email or password",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                  }
                }
              }
            }
          }
        }
      },

      "/employee/create": {
        "post": {
          "summary": "Create a employee",
          "tags": ["Employee"],
          "security": [
            {
              "JWT": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema":{
                    "type":"object",
                    "properties":{
                        "name": {
                            "type":"string",
                            "example":"Raju"
                        },
                        "email": {
                            "type":"string",
                            "example":"raju@gmail.com"
                        },
                        "phoneNumber": {
                            "type":"string",
                            "example":"9383028392"
                        },
                        "position": {
                            "type":"string",
                            "example":"Developer"
                        },
                        "salary": {
                            "type":"number",
                            "example":40000
                        }
                    }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Employee created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                        "message":{
                            "type":"string",
                            "example":"Employee created successfully"
                        }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid arguments",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InvalidArgumentsErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                  }
                }
              }
            }
          }
        }
      },

      "/employee/list": {
        "get": {
          "summary": "Get list of payers",
          "tags": ["Employee"],
          "security": [
            {
              "JWT": []
            }
          ],
          "responses": {
            "200": {
              "description": "Employee list fetched successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                        "message":{
                            "type":"string",
                            "example":"Data fetched"
                        },
                        "data":{
                            "type":"object",
                            "properties":{
                                "_id":{
                                    "type":"string",
                                    "example":"3032ndnom3-23jne832n-38hdjnso"
                                },
                                "name":{
                                    "type":"string",
                                    "example":"Ram"
                                },
                                "position":{
                                    "type":"string",
                                    "example":"Developer"
                                }
                            }
                        }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  